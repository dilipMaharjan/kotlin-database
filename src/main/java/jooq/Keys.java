/*
 * This file is generated by jOOQ.
 */
package jooq;


import javax.annotation.Generated;

import jooq.tables.Articles;
import jooq.tables.Authors;
import jooq.tables.Test;
import jooq.tables.records.ArticlesRecord;
import jooq.tables.records.AuthorsRecord;
import jooq.tables.records.TestRecord;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ArticlesRecord, Integer> IDENTITY_ARTICLES = Identities0.IDENTITY_ARTICLES;
    public static final Identity<AuthorsRecord, Integer> IDENTITY_AUTHORS = Identities0.IDENTITY_AUTHORS;
    public static final Identity<TestRecord, Integer> IDENTITY_TEST = Identities0.IDENTITY_TEST;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ArticlesRecord> PK_ARTICLES = UniqueKeys0.PK_ARTICLES;
    public static final UniqueKey<AuthorsRecord> PK_AUTHORS = UniqueKeys0.PK_AUTHORS;
    public static final UniqueKey<TestRecord> PK_TEST = UniqueKeys0.PK_TEST;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ArticlesRecord, Integer> IDENTITY_ARTICLES = Internal.createIdentity(Articles.ARTICLES, Articles.ARTICLES.ID);
        public static Identity<AuthorsRecord, Integer> IDENTITY_AUTHORS = Internal.createIdentity(Authors.AUTHORS, Authors.AUTHORS.ID);
        public static Identity<TestRecord, Integer> IDENTITY_TEST = Internal.createIdentity(Test.TEST, Test.TEST.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ArticlesRecord> PK_ARTICLES = Internal.createUniqueKey(Articles.ARTICLES, "pk_articles", Articles.ARTICLES.ID);
        public static final UniqueKey<AuthorsRecord> PK_AUTHORS = Internal.createUniqueKey(Authors.AUTHORS, "pk_authors", Authors.AUTHORS.ID);
        public static final UniqueKey<TestRecord> PK_TEST = Internal.createUniqueKey(Test.TEST, "pk_test", Test.TEST.ID);
    }
}
